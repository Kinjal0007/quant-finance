name: Build and Deploy Frontend

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - "frontend/**"
  pull_request:
    branches: [main]
    paths:
      - "frontend/**"

env:
  GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
  GCP_REGION: ${{ secrets.GCP_REGION || 'europe-west3' }}
  SERVICE_NAME: quant-finance-frontend

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"

      - name: Install dependencies
        run: npm ci

      # Temporarily disable linting and type-checking until scripts are implemented
      # - name: Run linting
      #   run: |
      #     npm run lint
      #     npm run type-check

      - name: Build application
        run: npm run build

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker
        run: gcloud auth configure-docker

      - name: Build and push image
        run: |
          cd frontend
          docker build -t gcr.io/$GCP_PROJECT/$SERVICE_NAME:${{ github.sha }} .
          docker push gcr.io/$GCP_PROJECT/$SERVICE_NAME:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image gcr.io/$GCP_PROJECT/$SERVICE_NAME:${{ github.sha }} \
            --project $GCP_PROJECT \
            --region $GCP_REGION \
            --allow-unauthenticated \
            --set-env-vars NEXT_PUBLIC_API_BASE=${{ secrets.FRONTEND_API_BASE }},NODE_ENV=production \
            --memory 1Gi \
            --cpu 1 \
            --max-instances 10
